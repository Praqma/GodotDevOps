name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  GODOT_VERSION: 3.3.2

jobs:
  windows:
    name: windows
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3.2

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Run GUT tests
        run: godot -d -s addons/gut/gut_cmdln.gd

      - name: Decide debugMode
        uses: haya14busa/action-cond@v1
        id: chooseExportMethod
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: "--export-debug"
          if_false: "--export"

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable

      - name: Build game client
        id: build
        run: |
          mkdir -v -p build/windows
          godot -v ${{ steps.chooseExportMethod.outputs.value }} "Windows Desktop" ./build/windows/NeoMori.exe

      - name: Git describe
        run: echo "GIT_DESCRIBE=$(git describe)" >> $GITHUB_ENV

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: NeoMori_${{ github.sha }}_${{ github.job }}
          path: ${{ github.workspace }}/build/windows/*

      - name: Create override.cfg
        if: ${{ env.GIT_DESCRIBE != '' }}
        run: echo "global/version = \"$GIT_DESCRIBE\"" >> override.cfg

      - name: Upload override.cfg
        if: ${{ env.GIT_DESCRIBE != '' }}
        uses: actions/upload-artifact@v2
        with:
          name: NeoMori_${{ github.sha }}_${{ github.job }}
          path: ${{ github.workspace }}/override.cfg

  linux:
    name: linux
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3.2

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Run GUT tests
        run: godot -d -s addons/gut/gut_cmdln.gd

      - name: Decide debugMode
        uses: haya14busa/action-cond@v1
        id: chooseExportMethod
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: "--export-debug"
          if_false: "--export"

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable

      - name: Build game client
        id: build
        run: |
          mkdir -v -p build/linux
          godot -v ${{ steps.chooseExportMethod.outputs.value }} "Linux/X11" ./build/linux/NeoMori

      - name: Git describe
        run: echo "GIT_DESCRIBE=$(git describe)" >> $GITHUB_ENV

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: NeoMori_${{ github.sha }}_${{ github.job }}
          path: ${{ github.workspace }}/build/linux/*

      - name: Create override.cfg
        if: ${{ env.GIT_DESCRIBE != '' }}
        run: echo "global/version = \"$GIT_DESCRIBE\"" >> override.cfg

      - name: Upload override.cfg
        if: ${{ env.GIT_DESCRIBE != '' }}
        uses: actions/upload-artifact@v2
        with:
          name: NeoMori_${{ github.sha }}_${{ github.job }}
          path: ${{ github.workspace }}/override.cfg

  mac:
    name: mac
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3.2

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Run GUT tests
        run: godot -d -s addons/gut/gut_cmdln.gd

      - name: Decide debugMode
        uses: haya14busa/action-cond@v1
        id: chooseExportMethod
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: "--export-debug"
          if_false: "--export"

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable

      - name: Build game client
        id: build
        run: |
          mkdir -v -p build/mac
          godot -v ${{ steps.chooseExportMethod.outputs.value }} "Mac OSX" ./build/mac/NeoMori.zip

      - name: Git describe
        run: echo "GIT_DESCRIBE=$(git describe)" >> $GITHUB_ENV

      - name: Unzip NeoMori
        run: unzip ./build/mac/NeoMori.zip -d NeoMori

      - name: Create override.cfg
        if: ${{ env.GIT_DESCRIBE != '' }}
        run: echo "global/version = \"$GIT_DESCRIBE\"" >> ./NeoMori/GodotDevOps.app/Contents/MacOS/override.cfg

      - name: Zip client
        run: zip -q -r NeoMori.zip NeoMori/*

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: NeoMori_${{ github.sha }}_${{ github.job }}
          path: ${{ github.workspace }}/NeoMori.zip


  # mac:
  #   name: mac
  #   runs-on: macos-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #         lfs: true

  #     - name: Install Godot
  #       run: |
  #         echo "Downloading Godot"
  #         curl https://downloads.tuxfamily.org/godotengine/3.3.2/Godot_v3.3.2-stable_osx.universal.zip --output Godot_3.3.2.zip
  #         ls
  #         echo "Unzipping"
  #         unzip Godot_3.3.2.zip
  #         ls

  #     - name: Run GUT tests
  #       run: Godot.app/Contents/MacOS/Godot -d -s addons/gut/gut_cmdln.gd

  #     - name: Decide debugMode
  #       uses: haya14busa/action-cond@v1
  #       id: chooseExportMethod
  #       with:
  #         cond: ${{ github.event_name == 'pull_request' }}
  #         if_true: "--export-debug"
  #         if_false: "--export"

  #     - name: Setup
  #       run: |
  #         echo "Downloading Export Templates"
  #         curl https://downloads.tuxfamily.org/godotengine/3.3.2/Godot_v3.3.2-stable_export_templates.tpz --output ${GODOT_VERSION}.tpz
  #         unzip ${GODOT_VERSION}.tpz
  #         mkdir -v -p /Users/runner/Library/"Application Support"/Godot/templates/${GODOT_VERSION}.stable
  #         mv ./templates/* /Users/runner/Library/"Application Support"/Godot/templates/${GODOT_VERSION}.stable

  #     - name: List templates
  #       run: |
  #         ls /Users/runner/Library/"Application Support"/Godot/templates/${GODOT_VERSION}.stable
  #         ls /Users/runner/Library/"Application Support"/Godot/templates/

  #     - name: Build game client
  #       id: build
  #       run: |
  #         mkdir -v -p build/mac
  #         Godot.app/Contents/MacOS/Godot -v ${{ steps.chooseExportMethod.outputs.value }} "Mac OSX" ./build/mac/

  #     # - name: Git describe
  #     #   run: echo "GIT_DESCRIBE=$(git describe)" >> $GITHUB_ENV

  #     # - name: Unzip NeoMori
  #     #   run: unzip ./build/mac/NeoMori.zip -d NeoMori

  #     # - name: Create override.cfg
  #     #   if: ${{ env.GIT_DESCRIBE != '' }}
  #     #   run: echo "global/version = \"$GIT_DESCRIBE\"" >> ./NeoMori/GodotDevOps.app/Contents/MacOS/override.cfg

  #     # - name: Zip client
  #     #   run: zip -q -r NeoMori.zip NeoMori/*

  #     - name: Upload build
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: NeoMori_${{ github.sha }}_${{ github.job }}
  #         path: ${{ github.workspace }}/build/mac/*
